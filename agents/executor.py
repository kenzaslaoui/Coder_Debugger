# -*- coding: utf-8 -*-
"""Copy of Executor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qcd99QyFAarZE2-7y8T5Yb6nzzGbh5sT
"""

# executor.py

import subprocess
import tempfile
import os
import sys
from typing import List, Dict

class CodeExecutor:
    def __init__(self, timeout: int = 5):
        self.timeout = timeout

    def run_code(self, code: str, test_cases: List[str]) -> Dict:
        """
        Appends test cases to code, runs the combined script in a subprocess, and returns the result.
        """
        formatted_tests = "\n".join(test_cases)
        full_script = f"{code}\n\n{formatted_tests}"
        print(f"\n\nExecutor is running the following script:\n{full_script}")

        with tempfile.NamedTemporaryFile(mode="w", suffix=".py", delete=False) as tmp_file:
            tmp_file.write(full_script)
            tmp_path = tmp_file.name

        # Check if the file was written correctly and examine how newlines appear
        with open(tmp_path, 'r') as file:
           print(f"\n\nCode written in the file (executor):\n{file.read()}")

        try:
            result = subprocess.run(
                [sys.executable, tmp_path],
                capture_output=True,
                text=True,
                timeout=self.timeout
            )
            return {
                "stdout": result.stdout,
                "stderr": result.stderr,
                "exit_code": result.returncode,
                "success": result.returncode == 0
            }

        except subprocess.TimeoutExpired:
            return {
                "stdout": "",
                "stderr": "Execution timed out.",
                "exit_code": -1,
                "success": False
            }

        finally:
            os.remove(tmp_path)